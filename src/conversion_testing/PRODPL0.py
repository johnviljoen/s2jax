from jax.experimental.sparse import BCOO, BCSR
import s2jax.jax_utils as jtu
from s2jax.utils import *
class PRODPL0:

#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
# 
# 
#    Problem : PRODPL0
#    *********
# 
#    A production planning problem in the computer industry.
# 
#    Source:
#    L. Escudero, private communication, 1991.
# 
#    SIF input: A.R. Conn, March 1991.
# 
#    classification = "C-CLQR2-RY-60-29"
# 
#    Constants
# 
# 
#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
#   Translated to Python by S2MPJ version 25 XI 2024
#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

    name = 'PRODPL0'

    def __init__(self, *args): 
        import jax.numpy as jnp
        from scipy.sparse import csr_matrix
        nargin   = len(args)

        #%%%%%%%%%%%%%%%%%%%  PREAMBLE %%%%%%%%%%%%%%%%%%%%
        v_  = {}
        ix_ = {}
        ig_ = {}
        v_['T'] = 5
        v_['1'] = 1
        #%%%%%%%%%%%%%%%%%%  DATA GROUPS %%%%%%%%%%%%%%%%%%%
        self.gscale  = jnp.array([])
        self.grnames = jnp.array([])
        cnames       = jnp.array([])
        self.cnames  = jnp.array([])
        gtype        = jnp.array([])
        irA          = jnp.array([],dtype=int)
        icA          = jnp.array([],dtype=int)
        valA         = jnp.array([],dtype=float)
        [ig,ig_,_] = jtu.s2mpj_ii('COST',ig_)
        gtype = jtu.arrset(gtype,ig,'<>')
        [ig,ig_,_] = jtu.s2mpj_ii('K01',ig_)
        gtype = jtu.arrset(gtype,ig,'<=')
        cnames = jtu.arrset(cnames,ig,'K01')
        [ig,ig_,_] = jtu.s2mpj_ii('K02',ig_)
        gtype = jtu.arrset(gtype,ig,'<=')
        cnames = jtu.arrset(cnames,ig,'K02')
        [ig,ig_,_] = jtu.s2mpj_ii('K03',ig_)
        gtype = jtu.arrset(gtype,ig,'<=')
        cnames = jtu.arrset(cnames,ig,'K03')
        [ig,ig_,_] = jtu.s2mpj_ii('K04',ig_)
        gtype = jtu.arrset(gtype,ig,'<=')
        cnames = jtu.arrset(cnames,ig,'K04')
        [ig,ig_,_] = jtu.s2mpj_ii('K05',ig_)
        gtype = jtu.arrset(gtype,ig,'<=')
        cnames = jtu.arrset(cnames,ig,'K05')
        [ig,ig_,_] = jtu.s2mpj_ii('D00101',ig_)
        gtype = jtu.arrset(gtype,ig,'==')
        cnames = jtu.arrset(cnames,ig,'D00101')
        [ig,ig_,_] = jtu.s2mpj_ii('D00201',ig_)
        gtype = jtu.arrset(gtype,ig,'==')
        cnames = jtu.arrset(cnames,ig,'D00201')
        [ig,ig_,_] = jtu.s2mpj_ii('D00301',ig_)
        gtype = jtu.arrset(gtype,ig,'==')
        cnames = jtu.arrset(cnames,ig,'D00301')
        [ig,ig_,_] = jtu.s2mpj_ii('D00401',ig_)
        gtype = jtu.arrset(gtype,ig,'==')
        cnames = jtu.arrset(cnames,ig,'D00401')
        [ig,ig_,_] = jtu.s2mpj_ii('D00102',ig_)
        gtype = jtu.arrset(gtype,ig,'==')
        cnames = jtu.arrset(cnames,ig,'D00102')
        [ig,ig_,_] = jtu.s2mpj_ii('D00202',ig_)
        gtype = jtu.arrset(gtype,ig,'==')
        cnames = jtu.arrset(cnames,ig,'D00202')
        [ig,ig_,_] = jtu.s2mpj_ii('D00302',ig_)
        gtype = jtu.arrset(gtype,ig,'==')
        cnames = jtu.arrset(cnames,ig,'D00302')
        [ig,ig_,_] = jtu.s2mpj_ii('D00402',ig_)
        gtype = jtu.arrset(gtype,ig,'==')
        cnames = jtu.arrset(cnames,ig,'D00402')
        [ig,ig_,_] = jtu.s2mpj_ii('D00103',ig_)
        gtype = jtu.arrset(gtype,ig,'==')
        cnames = jtu.arrset(cnames,ig,'D00103')
        [ig,ig_,_] = jtu.s2mpj_ii('D00203',ig_)
        gtype = jtu.arrset(gtype,ig,'==')
        cnames = jtu.arrset(cnames,ig,'D00203')
        [ig,ig_,_] = jtu.s2mpj_ii('D00303',ig_)
        gtype = jtu.arrset(gtype,ig,'==')
        cnames = jtu.arrset(cnames,ig,'D00303')
        [ig,ig_,_] = jtu.s2mpj_ii('D00403',ig_)
        gtype = jtu.arrset(gtype,ig,'==')
        cnames = jtu.arrset(cnames,ig,'D00403')
        [ig,ig_,_] = jtu.s2mpj_ii('D00104',ig_)
        gtype = jtu.arrset(gtype,ig,'==')
        cnames = jtu.arrset(cnames,ig,'D00104')
        [ig,ig_,_] = jtu.s2mpj_ii('D00204',ig_)
        gtype = jtu.arrset(gtype,ig,'==')
        cnames = jtu.arrset(cnames,ig,'D00204')
        [ig,ig_,_] = jtu.s2mpj_ii('D00304',ig_)
        gtype = jtu.arrset(gtype,ig,'==')
        cnames = jtu.arrset(cnames,ig,'D00304')
        [ig,ig_,_] = jtu.s2mpj_ii('D00404',ig_)
        gtype = jtu.arrset(gtype,ig,'==')
        cnames = jtu.arrset(cnames,ig,'D00404')
        [ig,ig_,_] = jtu.s2mpj_ii('D00105',ig_)
        gtype = jtu.arrset(gtype,ig,'==')
        cnames = jtu.arrset(cnames,ig,'D00105')
        [ig,ig_,_] = jtu.s2mpj_ii('D00205',ig_)
        gtype = jtu.arrset(gtype,ig,'==')
        cnames = jtu.arrset(cnames,ig,'D00205')
        [ig,ig_,_] = jtu.s2mpj_ii('D00305',ig_)
        gtype = jtu.arrset(gtype,ig,'==')
        cnames = jtu.arrset(cnames,ig,'D00305')
        [ig,ig_,_] = jtu.s2mpj_ii('D00405',ig_)
        gtype = jtu.arrset(gtype,ig,'==')
        cnames = jtu.arrset(cnames,ig,'D00405')
        v_['TM1'] = -1+v_['T']
        for I in range(int(v_['1']),int(v_['TM1'])+1):
            [ig,ig_,_] = jtu.s2mpj_ii('SMOOTH'+str(I),ig_)
            gtype = jtu.arrset(gtype,ig,'<=')
            cnames = jtu.arrset(cnames,ig,'SMOOTH'+str(I))
        #%%%%%%%%%%%%%%%%%%%  VARIABLES %%%%%%%%%%%%%%%%%%%%
        self.xnames = jnp.array([])
        self.xscale = jnp.array([])
        intvars   = jnp.array([])
        binvars   = jnp.array([])
        ngrp   = len(ig_)
        [iv,ix_,_] = jtu.s2mpj_ii('X00101',ix_)
        self.xnames=jtu.arrset(self.xnames,iv,'X00101')
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['K01']])
        valA = jtu.append(valA,float(1))
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['D00101']])
        valA = jtu.append(valA,float(1.0))
        [iv,ix_,_] = jtu.s2mpj_ii('X00201',ix_)
        self.xnames=jtu.arrset(self.xnames,iv,'X00201')
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['K01']])
        valA = jtu.append(valA,float(1))
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['D00201']])
        valA = jtu.append(valA,float(1.0))
        [iv,ix_,_] = jtu.s2mpj_ii('X00301',ix_)
        self.xnames=jtu.arrset(self.xnames,iv,'X00301')
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['K01']])
        valA = jtu.append(valA,float(1))
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['D00301']])
        valA = jtu.append(valA,float(1.0))
        [iv,ix_,_] = jtu.s2mpj_ii('X00401',ix_)
        self.xnames=jtu.arrset(self.xnames,iv,'X00401')
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['K01']])
        valA = jtu.append(valA,float(1))
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['D00401']])
        valA = jtu.append(valA,float(1.0))
        [iv,ix_,_] = jtu.s2mpj_ii('X00102',ix_)
        self.xnames=jtu.arrset(self.xnames,iv,'X00102')
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['K02']])
        valA = jtu.append(valA,float(1))
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['D00102']])
        valA = jtu.append(valA,float(1.0))
        [iv,ix_,_] = jtu.s2mpj_ii('X00202',ix_)
        self.xnames=jtu.arrset(self.xnames,iv,'X00202')
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['K02']])
        valA = jtu.append(valA,float(1))
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['D00202']])
        valA = jtu.append(valA,float(1.0))
        [iv,ix_,_] = jtu.s2mpj_ii('X00302',ix_)
        self.xnames=jtu.arrset(self.xnames,iv,'X00302')
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['K02']])
        valA = jtu.append(valA,float(1))
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['D00302']])
        valA = jtu.append(valA,float(1.0))
        [iv,ix_,_] = jtu.s2mpj_ii('X00402',ix_)
        self.xnames=jtu.arrset(self.xnames,iv,'X00402')
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['K02']])
        valA = jtu.append(valA,float(1))
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['D00402']])
        valA = jtu.append(valA,float(1.0))
        [iv,ix_,_] = jtu.s2mpj_ii('X00103',ix_)
        self.xnames=jtu.arrset(self.xnames,iv,'X00103')
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['K03']])
        valA = jtu.append(valA,float(1))
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['D00103']])
        valA = jtu.append(valA,float(1.0))
        [iv,ix_,_] = jtu.s2mpj_ii('X00203',ix_)
        self.xnames=jtu.arrset(self.xnames,iv,'X00203')
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['K03']])
        valA = jtu.append(valA,float(1))
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['D00203']])
        valA = jtu.append(valA,float(1.0))
        [iv,ix_,_] = jtu.s2mpj_ii('X00303',ix_)
        self.xnames=jtu.arrset(self.xnames,iv,'X00303')
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['K03']])
        valA = jtu.append(valA,float(1))
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['D00303']])
        valA = jtu.append(valA,float(1.0))
        [iv,ix_,_] = jtu.s2mpj_ii('X00403',ix_)
        self.xnames=jtu.arrset(self.xnames,iv,'X00403')
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['K03']])
        valA = jtu.append(valA,float(1))
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['D00403']])
        valA = jtu.append(valA,float(1.0))
        [iv,ix_,_] = jtu.s2mpj_ii('X00104',ix_)
        self.xnames=jtu.arrset(self.xnames,iv,'X00104')
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['K04']])
        valA = jtu.append(valA,float(1))
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['D00104']])
        valA = jtu.append(valA,float(1.0))
        [iv,ix_,_] = jtu.s2mpj_ii('X00204',ix_)
        self.xnames=jtu.arrset(self.xnames,iv,'X00204')
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['K04']])
        valA = jtu.append(valA,float(1))
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['D00204']])
        valA = jtu.append(valA,float(1.0))
        [iv,ix_,_] = jtu.s2mpj_ii('X00304',ix_)
        self.xnames=jtu.arrset(self.xnames,iv,'X00304')
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['K04']])
        valA = jtu.append(valA,float(1))
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['D00304']])
        valA = jtu.append(valA,float(1.0))
        [iv,ix_,_] = jtu.s2mpj_ii('X00404',ix_)
        self.xnames=jtu.arrset(self.xnames,iv,'X00404')
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['K04']])
        valA = jtu.append(valA,float(1))
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['D00404']])
        valA = jtu.append(valA,float(1.0))
        [iv,ix_,_] = jtu.s2mpj_ii('X00105',ix_)
        self.xnames=jtu.arrset(self.xnames,iv,'X00105')
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['K05']])
        valA = jtu.append(valA,float(1))
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['D00105']])
        valA = jtu.append(valA,float(1.0))
        [iv,ix_,_] = jtu.s2mpj_ii('X00205',ix_)
        self.xnames=jtu.arrset(self.xnames,iv,'X00205')
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['K05']])
        valA = jtu.append(valA,float(1))
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['D00205']])
        valA = jtu.append(valA,float(1.0))
        [iv,ix_,_] = jtu.s2mpj_ii('X00305',ix_)
        self.xnames=jtu.arrset(self.xnames,iv,'X00305')
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['K05']])
        valA = jtu.append(valA,float(1))
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['D00305']])
        valA = jtu.append(valA,float(1.0))
        [iv,ix_,_] = jtu.s2mpj_ii('X00405',ix_)
        self.xnames=jtu.arrset(self.xnames,iv,'X00405')
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['K05']])
        valA = jtu.append(valA,float(1))
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['D00405']])
        valA = jtu.append(valA,float(1.0))
        [iv,ix_,_] = jtu.s2mpj_ii('I00101',ix_)
        self.xnames=jtu.arrset(self.xnames,iv,'I00101')
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['COST']])
        valA = jtu.append(valA,float(1.000000))
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['D00101']])
        valA = jtu.append(valA,float(-1.0))
        [iv,ix_,_] = jtu.s2mpj_ii('I00101',ix_)
        self.xnames=jtu.arrset(self.xnames,iv,'I00101')
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['D00102']])
        valA = jtu.append(valA,float(1.0))
        [iv,ix_,_] = jtu.s2mpj_ii('Y00101',ix_)
        self.xnames=jtu.arrset(self.xnames,iv,'Y00101')
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['COST']])
        valA = jtu.append(valA,float(2))
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['D00101']])
        valA = jtu.append(valA,float(1.0))
        [iv,ix_,_] = jtu.s2mpj_ii('I00201',ix_)
        self.xnames=jtu.arrset(self.xnames,iv,'I00201')
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['COST']])
        valA = jtu.append(valA,float(2.000000))
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['D00201']])
        valA = jtu.append(valA,float(-1.0))
        [iv,ix_,_] = jtu.s2mpj_ii('I00201',ix_)
        self.xnames=jtu.arrset(self.xnames,iv,'I00201')
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['D00202']])
        valA = jtu.append(valA,float(1.0))
        [iv,ix_,_] = jtu.s2mpj_ii('Y00201',ix_)
        self.xnames=jtu.arrset(self.xnames,iv,'Y00201')
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['COST']])
        valA = jtu.append(valA,float(3))
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['D00201']])
        valA = jtu.append(valA,float(1.0))
        [iv,ix_,_] = jtu.s2mpj_ii('I00301',ix_)
        self.xnames=jtu.arrset(self.xnames,iv,'I00301')
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['COST']])
        valA = jtu.append(valA,float(3.000000))
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['D00301']])
        valA = jtu.append(valA,float(-1.0))
        [iv,ix_,_] = jtu.s2mpj_ii('I00301',ix_)
        self.xnames=jtu.arrset(self.xnames,iv,'I00301')
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['D00302']])
        valA = jtu.append(valA,float(1.0))
        [iv,ix_,_] = jtu.s2mpj_ii('Y00301',ix_)
        self.xnames=jtu.arrset(self.xnames,iv,'Y00301')
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['COST']])
        valA = jtu.append(valA,float(2))
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['D00301']])
        valA = jtu.append(valA,float(1.0))
        [iv,ix_,_] = jtu.s2mpj_ii('I00401',ix_)
        self.xnames=jtu.arrset(self.xnames,iv,'I00401')
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['COST']])
        valA = jtu.append(valA,float(4.000000))
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['D00401']])
        valA = jtu.append(valA,float(-1.0))
        [iv,ix_,_] = jtu.s2mpj_ii('I00401',ix_)
        self.xnames=jtu.arrset(self.xnames,iv,'I00401')
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['D00402']])
        valA = jtu.append(valA,float(1.0))
        [iv,ix_,_] = jtu.s2mpj_ii('Y00401',ix_)
        self.xnames=jtu.arrset(self.xnames,iv,'Y00401')
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['COST']])
        valA = jtu.append(valA,float(5))
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['D00401']])
        valA = jtu.append(valA,float(1.0))
        [iv,ix_,_] = jtu.s2mpj_ii('I00102',ix_)
        self.xnames=jtu.arrset(self.xnames,iv,'I00102')
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['COST']])
        valA = jtu.append(valA,float(1.000000))
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['D00102']])
        valA = jtu.append(valA,float(-1.0))
        [iv,ix_,_] = jtu.s2mpj_ii('I00102',ix_)
        self.xnames=jtu.arrset(self.xnames,iv,'I00102')
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['D00103']])
        valA = jtu.append(valA,float(1.0))
        [iv,ix_,_] = jtu.s2mpj_ii('Y00102',ix_)
        self.xnames=jtu.arrset(self.xnames,iv,'Y00102')
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['COST']])
        valA = jtu.append(valA,float(2))
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['D00102']])
        valA = jtu.append(valA,float(1.0))
        [iv,ix_,_] = jtu.s2mpj_ii('I00202',ix_)
        self.xnames=jtu.arrset(self.xnames,iv,'I00202')
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['COST']])
        valA = jtu.append(valA,float(2.000000))
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['D00202']])
        valA = jtu.append(valA,float(-1.0))
        [iv,ix_,_] = jtu.s2mpj_ii('I00202',ix_)
        self.xnames=jtu.arrset(self.xnames,iv,'I00202')
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['D00203']])
        valA = jtu.append(valA,float(1.0))
        [iv,ix_,_] = jtu.s2mpj_ii('Y00202',ix_)
        self.xnames=jtu.arrset(self.xnames,iv,'Y00202')
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['COST']])
        valA = jtu.append(valA,float(3))
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['D00202']])
        valA = jtu.append(valA,float(1.0))
        [iv,ix_,_] = jtu.s2mpj_ii('I00302',ix_)
        self.xnames=jtu.arrset(self.xnames,iv,'I00302')
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['COST']])
        valA = jtu.append(valA,float(3.000000))
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['D00302']])
        valA = jtu.append(valA,float(-1.0))
        [iv,ix_,_] = jtu.s2mpj_ii('I00302',ix_)
        self.xnames=jtu.arrset(self.xnames,iv,'I00302')
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['D00303']])
        valA = jtu.append(valA,float(1.0))
        [iv,ix_,_] = jtu.s2mpj_ii('Y00302',ix_)
        self.xnames=jtu.arrset(self.xnames,iv,'Y00302')
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['COST']])
        valA = jtu.append(valA,float(2))
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['D00302']])
        valA = jtu.append(valA,float(1.0))
        [iv,ix_,_] = jtu.s2mpj_ii('I00402',ix_)
        self.xnames=jtu.arrset(self.xnames,iv,'I00402')
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['COST']])
        valA = jtu.append(valA,float(4.000000))
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['D00402']])
        valA = jtu.append(valA,float(-1.0))
        [iv,ix_,_] = jtu.s2mpj_ii('I00402',ix_)
        self.xnames=jtu.arrset(self.xnames,iv,'I00402')
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['D00403']])
        valA = jtu.append(valA,float(1.0))
        [iv,ix_,_] = jtu.s2mpj_ii('Y00402',ix_)
        self.xnames=jtu.arrset(self.xnames,iv,'Y00402')
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['COST']])
        valA = jtu.append(valA,float(5))
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['D00402']])
        valA = jtu.append(valA,float(1.0))
        [iv,ix_,_] = jtu.s2mpj_ii('I00103',ix_)
        self.xnames=jtu.arrset(self.xnames,iv,'I00103')
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['COST']])
        valA = jtu.append(valA,float(1.000000))
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['D00103']])
        valA = jtu.append(valA,float(-1.0))
        [iv,ix_,_] = jtu.s2mpj_ii('I00103',ix_)
        self.xnames=jtu.arrset(self.xnames,iv,'I00103')
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['D00104']])
        valA = jtu.append(valA,float(1.0))
        [iv,ix_,_] = jtu.s2mpj_ii('Y00103',ix_)
        self.xnames=jtu.arrset(self.xnames,iv,'Y00103')
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['COST']])
        valA = jtu.append(valA,float(2))
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['D00103']])
        valA = jtu.append(valA,float(1.0))
        [iv,ix_,_] = jtu.s2mpj_ii('I00203',ix_)
        self.xnames=jtu.arrset(self.xnames,iv,'I00203')
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['COST']])
        valA = jtu.append(valA,float(2.000000))
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['D00203']])
        valA = jtu.append(valA,float(-1.0))
        [iv,ix_,_] = jtu.s2mpj_ii('I00203',ix_)
        self.xnames=jtu.arrset(self.xnames,iv,'I00203')
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['D00204']])
        valA = jtu.append(valA,float(1.0))
        [iv,ix_,_] = jtu.s2mpj_ii('Y00203',ix_)
        self.xnames=jtu.arrset(self.xnames,iv,'Y00203')
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['COST']])
        valA = jtu.append(valA,float(3))
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['D00203']])
        valA = jtu.append(valA,float(1.0))
        [iv,ix_,_] = jtu.s2mpj_ii('I00303',ix_)
        self.xnames=jtu.arrset(self.xnames,iv,'I00303')
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['COST']])
        valA = jtu.append(valA,float(3.000000))
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['D00303']])
        valA = jtu.append(valA,float(-1.0))
        [iv,ix_,_] = jtu.s2mpj_ii('I00303',ix_)
        self.xnames=jtu.arrset(self.xnames,iv,'I00303')
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['D00304']])
        valA = jtu.append(valA,float(1.0))
        [iv,ix_,_] = jtu.s2mpj_ii('Y00303',ix_)
        self.xnames=jtu.arrset(self.xnames,iv,'Y00303')
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['COST']])
        valA = jtu.append(valA,float(2))
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['D00303']])
        valA = jtu.append(valA,float(1.0))
        [iv,ix_,_] = jtu.s2mpj_ii('I00403',ix_)
        self.xnames=jtu.arrset(self.xnames,iv,'I00403')
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['COST']])
        valA = jtu.append(valA,float(4.000000))
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['D00403']])
        valA = jtu.append(valA,float(-1.0))
        [iv,ix_,_] = jtu.s2mpj_ii('I00403',ix_)
        self.xnames=jtu.arrset(self.xnames,iv,'I00403')
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['D00404']])
        valA = jtu.append(valA,float(1.0))
        [iv,ix_,_] = jtu.s2mpj_ii('Y00403',ix_)
        self.xnames=jtu.arrset(self.xnames,iv,'Y00403')
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['COST']])
        valA = jtu.append(valA,float(5))
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['D00403']])
        valA = jtu.append(valA,float(1.0))
        [iv,ix_,_] = jtu.s2mpj_ii('I00104',ix_)
        self.xnames=jtu.arrset(self.xnames,iv,'I00104')
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['COST']])
        valA = jtu.append(valA,float(1.000000))
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['D00104']])
        valA = jtu.append(valA,float(-1.0))
        [iv,ix_,_] = jtu.s2mpj_ii('I00104',ix_)
        self.xnames=jtu.arrset(self.xnames,iv,'I00104')
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['D00105']])
        valA = jtu.append(valA,float(1.0))
        [iv,ix_,_] = jtu.s2mpj_ii('Y00104',ix_)
        self.xnames=jtu.arrset(self.xnames,iv,'Y00104')
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['COST']])
        valA = jtu.append(valA,float(2))
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['D00104']])
        valA = jtu.append(valA,float(1.0))
        [iv,ix_,_] = jtu.s2mpj_ii('I00204',ix_)
        self.xnames=jtu.arrset(self.xnames,iv,'I00204')
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['COST']])
        valA = jtu.append(valA,float(2.000000))
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['D00204']])
        valA = jtu.append(valA,float(-1.0))
        [iv,ix_,_] = jtu.s2mpj_ii('I00204',ix_)
        self.xnames=jtu.arrset(self.xnames,iv,'I00204')
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['D00205']])
        valA = jtu.append(valA,float(1.0))
        [iv,ix_,_] = jtu.s2mpj_ii('Y00204',ix_)
        self.xnames=jtu.arrset(self.xnames,iv,'Y00204')
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['COST']])
        valA = jtu.append(valA,float(3))
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['D00204']])
        valA = jtu.append(valA,float(1.0))
        [iv,ix_,_] = jtu.s2mpj_ii('I00304',ix_)
        self.xnames=jtu.arrset(self.xnames,iv,'I00304')
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['COST']])
        valA = jtu.append(valA,float(3.000000))
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['D00304']])
        valA = jtu.append(valA,float(-1.0))
        [iv,ix_,_] = jtu.s2mpj_ii('I00304',ix_)
        self.xnames=jtu.arrset(self.xnames,iv,'I00304')
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['D00305']])
        valA = jtu.append(valA,float(1.0))
        [iv,ix_,_] = jtu.s2mpj_ii('Y00304',ix_)
        self.xnames=jtu.arrset(self.xnames,iv,'Y00304')
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['COST']])
        valA = jtu.append(valA,float(2))
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['D00304']])
        valA = jtu.append(valA,float(1.0))
        [iv,ix_,_] = jtu.s2mpj_ii('I00404',ix_)
        self.xnames=jtu.arrset(self.xnames,iv,'I00404')
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['COST']])
        valA = jtu.append(valA,float(4.000000))
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['D00404']])
        valA = jtu.append(valA,float(-1.0))
        [iv,ix_,_] = jtu.s2mpj_ii('I00404',ix_)
        self.xnames=jtu.arrset(self.xnames,iv,'I00404')
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['D00405']])
        valA = jtu.append(valA,float(1.0))
        [iv,ix_,_] = jtu.s2mpj_ii('Y00404',ix_)
        self.xnames=jtu.arrset(self.xnames,iv,'Y00404')
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['COST']])
        valA = jtu.append(valA,float(5))
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['D00404']])
        valA = jtu.append(valA,float(1.0))
        [iv,ix_,_] = jtu.s2mpj_ii('I00105',ix_)
        self.xnames=jtu.arrset(self.xnames,iv,'I00105')
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['COST']])
        valA = jtu.append(valA,float(1.000000))
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['D00105']])
        valA = jtu.append(valA,float(-1.0))
        [iv,ix_,_] = jtu.s2mpj_ii('Y00105',ix_)
        self.xnames=jtu.arrset(self.xnames,iv,'Y00105')
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['COST']])
        valA = jtu.append(valA,float(2))
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['D00105']])
        valA = jtu.append(valA,float(1.0))
        [iv,ix_,_] = jtu.s2mpj_ii('I00205',ix_)
        self.xnames=jtu.arrset(self.xnames,iv,'I00205')
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['COST']])
        valA = jtu.append(valA,float(2.000000))
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['D00205']])
        valA = jtu.append(valA,float(-1.0))
        [iv,ix_,_] = jtu.s2mpj_ii('Y00205',ix_)
        self.xnames=jtu.arrset(self.xnames,iv,'Y00205')
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['COST']])
        valA = jtu.append(valA,float(3))
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['D00205']])
        valA = jtu.append(valA,float(1.0))
        [iv,ix_,_] = jtu.s2mpj_ii('I00305',ix_)
        self.xnames=jtu.arrset(self.xnames,iv,'I00305')
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['COST']])
        valA = jtu.append(valA,float(3.000000))
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['D00305']])
        valA = jtu.append(valA,float(-1.0))
        [iv,ix_,_] = jtu.s2mpj_ii('Y00305',ix_)
        self.xnames=jtu.arrset(self.xnames,iv,'Y00305')
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['COST']])
        valA = jtu.append(valA,float(2))
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['D00305']])
        valA = jtu.append(valA,float(1.0))
        [iv,ix_,_] = jtu.s2mpj_ii('I00405',ix_)
        self.xnames=jtu.arrset(self.xnames,iv,'I00405')
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['COST']])
        valA = jtu.append(valA,float(4.000000))
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['D00405']])
        valA = jtu.append(valA,float(-1.0))
        [iv,ix_,_] = jtu.s2mpj_ii('Y00405',ix_)
        self.xnames=jtu.arrset(self.xnames,iv,'Y00405')
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['COST']])
        valA = jtu.append(valA,float(5))
        icA  = jtu.append(icA,[iv])
        irA  = jtu.append(irA,[ig_['D00405']])
        valA = jtu.append(valA,float(1.0))
        #%%%%%%%%%%%%%% GLOBAL DIMENSIONS %%%%%%%%%%%%%%%%%
        self.n   = len(ix_)
        legrps = jnp.where(gtype=='<=')[0]
        eqgrps = jnp.where(gtype=='==')[0]
        gegrps = jnp.where(gtype=='>=')[0]
        self.nle = len(legrps)
        self.neq = len(eqgrps)
        self.nge = len(gegrps)
        self.m   = self.nle+self.neq+self.nge
        self.congrps = jnp.concatenate((legrps,eqgrps,gegrps))
        self.cnames = cnames[self.congrps]
        self.nob = ngrp-self.m
        self.objgrps = jnp.where(gtype=='<>')[0]
        #%%%%%%%%%%%%%%%%%% CONSTANTS %%%%%%%%%%%%%%%%%%%%%
        self.gconst = jnp.zeros((ngrp,1))
        self.gconst = jtu.arrset(self.gconst,ig_['K01'],float(3))
        self.gconst = jtu.arrset(self.gconst,ig_['K02'],float(6))
        self.gconst = jtu.arrset(self.gconst,ig_['K03'],float(10))
        self.gconst = jtu.arrset(self.gconst,ig_['K04'],float(2000))
        self.gconst = jtu.arrset(self.gconst,ig_['K05'],float(18))
        self.gconst = jtu.arrset(self.gconst,ig_['D00101'],float(1.000))
        self.gconst = jtu.arrset(self.gconst,ig_['D00201'],float(1.000))
        self.gconst = jtu.arrset(self.gconst,ig_['D00301'],float(1.000))
        self.gconst = jtu.arrset(self.gconst,ig_['D00401'],float(1.000))
        self.gconst = jtu.arrset(self.gconst,ig_['D00102'],float(2.667))
        self.gconst = jtu.arrset(self.gconst,ig_['D00202'],float(1.667))
        self.gconst = jtu.arrset(self.gconst,ig_['D00302'],float(2.667))
        self.gconst = jtu.arrset(self.gconst,ig_['D00402'],float(3.333))
        self.gconst = jtu.arrset(self.gconst,ig_['D00103'],float(2.667))
        self.gconst = jtu.arrset(self.gconst,ig_['D00203'],float(2.000))
        self.gconst = jtu.arrset(self.gconst,ig_['D00303'],float(3.000))
        self.gconst = jtu.arrset(self.gconst,ig_['D00403'],float(3.000))
        self.gconst = jtu.arrset(self.gconst,ig_['D00104'],float(2.667))
        self.gconst = jtu.arrset(self.gconst,ig_['D00204'],float(2.667))
        self.gconst = jtu.arrset(self.gconst,ig_['D00304'],float(2.667))
        self.gconst = jtu.arrset(self.gconst,ig_['D00404'],float(2.667))
        self.gconst = jtu.arrset(self.gconst,ig_['D00105'],float(2.667))
        self.gconst = jtu.arrset(self.gconst,ig_['D00205'],float(2.333))
        self.gconst = jtu.arrset(self.gconst,ig_['D00305'],float(2.333))
        self.gconst = jtu.arrset(self.gconst,ig_['D00405'],float(2.333))
        #%%%%%%%%%%%%%%%%%%%% ELFTYPE %%%%%%%%%%%%%%%%%%%%%
        iet_  = {}
        elftv = []
        [it,iet_,_] = jtu.s2mpj_ii( 'eSQMRSQ', iet_)
        elftv = jtu.loaset(elftv,it,0,'V1')
        elftv = jtu.loaset(elftv,it,1,'V2')
        elftv = jtu.loaset(elftv,it,2,'V3')
        elftv = jtu.loaset(elftv,it,3,'V4')
        elftv = jtu.loaset(elftv,it,4,'V5')
        elftv = jtu.loaset(elftv,it,5,'V6')
        elftv = jtu.loaset(elftv,it,6,'V7')
        elftv = jtu.loaset(elftv,it,7,'V8')
        #%%%%%%%%%%%%%%%%%% ELEMENT USES %%%%%%%%%%%%%%%%%%
        ie_ = {}
        self.elftype = jnp.array([])
        ielftype     = jnp.array([])
        self.elvar   = []
        for I in range(int(v_['1']),int(v_['TM1'])+1):
            v_['IP1'] = 1+I
            ename = 'NLE'+str(I)
            [ie,ie_,_] = jtu.s2mpj_ii(ename,ie_)
            self.elftype = jtu.arrset(self.elftype,ie,'eSQMRSQ')
            ielftype = jtu.arrset(ielftype,ie,iet_["eSQMRSQ"])
            self.x0 = jnp.zeros((self.n,1))
            vname = 'X0010'+str(int(v_['IP1']))
            [iv,ix_] = jtu.s2mpj_nlx(self,vname,ix_,1,None,None,None)
            posev = jnp.where(elftv[ielftype[ie]]=='V1')[0]
            self.elvar = jtu.loaset(self.elvar,ie,posev[0],iv)
            vname = 'X0020'+str(int(v_['IP1']))
            [iv,ix_] = jtu.s2mpj_nlx(self,vname,ix_,1,None,None,None)
            posev = jnp.where(elftv[ielftype[ie]]=='V2')[0]
            self.elvar = jtu.loaset(self.elvar,ie,posev[0],iv)
            vname = 'X0030'+str(int(v_['IP1']))
            [iv,ix_] = jtu.s2mpj_nlx(self,vname,ix_,1,None,None,None)
            posev = jnp.where(elftv[ielftype[ie]]=='V3')[0]
            self.elvar = jtu.loaset(self.elvar,ie,posev[0],iv)
            vname = 'X0040'+str(int(v_['IP1']))
            [iv,ix_] = jtu.s2mpj_nlx(self,vname,ix_,1,None,None,None)
            posev = jnp.where(elftv[ielftype[ie]]=='V4')[0]
            self.elvar = jtu.loaset(self.elvar,ie,posev[0],iv)
            vname = 'X0010'+str(I)
            [iv,ix_] = jtu.s2mpj_nlx(self,vname,ix_,1,None,None,None)
            posev = jnp.where(elftv[ielftype[ie]]=='V5')[0]
            self.elvar = jtu.loaset(self.elvar,ie,posev[0],iv)
            vname = 'X0020'+str(I)
            [iv,ix_] = jtu.s2mpj_nlx(self,vname,ix_,1,None,None,None)
            posev = jnp.where(elftv[ielftype[ie]]=='V6')[0]
            self.elvar = jtu.loaset(self.elvar,ie,posev[0],iv)
            vname = 'X0030'+str(I)
            [iv,ix_] = jtu.s2mpj_nlx(self,vname,ix_,1,None,None,None)
            posev = jnp.where(elftv[ielftype[ie]]=='V7')[0]
            self.elvar = jtu.loaset(self.elvar,ie,posev[0],iv)
            vname = 'X0040'+str(I)
            [iv,ix_] = jtu.s2mpj_nlx(self,vname,ix_,1,None,None,None)
            posev = jnp.where(elftv[ielftype[ie]]=='V8')[0]
            self.elvar = jtu.loaset(self.elvar,ie,posev[0],iv)
        #%%%%%%%%%%%%%%%%%%% GROUP USES %%%%%%%%%%%%%%%%%%%
        self.grelt   = []
        for ig in jnp.arange(0,ngrp):
            self.grelt.append(jnp.array([]))
        self.grftype = jnp.array([])
        self.grelw   = []
        nlc         = jnp.array([])
        for I in range(int(v_['1']),int(v_['TM1'])+1):
            ig = ig_['SMOOTH'+str(I)]
            posel = len(self.grelt[ig])
            self.grelt = jtu.loaset(self.grelt,ig,posel,ie_['NLE'+str(I)])
            nlc = jnp.union1d(nlc,jnp.array([ig]))
            self.grelw = jtu.loaset(self.grelw,ig,posel,1.)
        #%%%%%%%%%%%%%%%%%% OBJECT BOUNDS %%%%%%%%%%%%%%%%%
#    Solution
# LO SOLTN               58.7898356794
        #%%%%%%%% BUILD THE SPARSE MATRICES %%%%%%%%%%%%%%%
        self.A = BCSR.from_bcoo(BCOO((valA, jnp.array((irA,icA)).T), shape=(ngrp,self.n)))
        #%%%%%%%% DEFAULT FOR MISSING SECTION(S) %%%%%%%%%%
        self.xlower = jnp.zeros((self.n,1))
        self.xupper = jnp.full((self.n,1),+float('Inf'))
        #%%%%%%%%%%%%% FORM clower AND cupper %%%%%%%%%%%%%
        self.clower = jnp.full((self.m,1),-float('Inf'))
        self.cupper = jnp.full((self.m,1),+float('Inf'))
        self.cupper = jtu.np_like_set(self.cupper, jnp.arange(self.nle), jnp.zeros((self.nle,1)))
        self.clower = jtu.np_like_set(self.clower, jnp.array([jnp.arange(self.nle,self.nle+self.neq)]), jnp.zeros((self.neq,1)))
        self.cupper = jtu.np_like_set(self.cupper, jnp.array([jnp.arange(self.nle,self.nle+self.neq)]), jnp.zeros((self.neq,1)))
        #%%%% RETURN VALUES FROM THE __INIT__ METHOD %%%%%%
        self.lincons  = (
              jnp.where(jnp.isin(self.congrps,jnp.setdiff1d(self.congrps,nlc)))[0])
        self.pbclass   = "C-CLQR2-RY-60-29"
        self.x0        = jnp.zeros((self.n,1))
        self.objderlvl = 2
        self.conderlvl = [2]

# **********************
#  SET UP THE FUNCTION *
#  AND RANGE ROUTINES  *
# **********************

    #%%%%%%%%%%%%%%% NONLINEAR ELEMENTS %%%%%%%%%%%%%%%

    @staticmethod
    def e_globs(self):

        import jax.numpy as jnp
        self.efpar = jnp.array([]);
        self.efpar = jtu.arrset( self.efpar,0,2.0)
        self.efpar = jtu.arrset( self.efpar,1,0.1)
        self.efpar = jtu.arrset( self.efpar,2,self.efpar[1]*self.efpar[1])
        return pbm

    @staticmethod
    def eSQMRSQ(self, nargout,*args):

        import jax.numpy as jnp
        EV_  = args[0]
        iel_ = args[1]
        U_ = jnp.zeros((2,8))
        IV_ = jnp.zeros(2)
        U_ = jtu.np_like_set(U_, jnp.array([0,0]), U_[0,0]+1)
        U_ = jtu.np_like_set(U_, jnp.array([0,1]), U_[0,1]+1)
        U_ = jtu.np_like_set(U_, jnp.array([0,2]), U_[0,2]+1)
        U_ = jtu.np_like_set(U_, jnp.array([0,3]), U_[0,3]+1)
        U_ = jtu.np_like_set(U_, jnp.array([1,4]), U_[1,4]+1)
        U_ = jtu.np_like_set(U_, jnp.array([1,5]), U_[1,5]+1)
        U_ = jtu.np_like_set(U_, jnp.array([1,6]), U_[1,6]+1)
        U_ = jtu.np_like_set(U_, jnp.array([1,7]), U_[1,7]+1)
        IV_ = jtu.np_like_set(IV_, 0, U_[0:1,:].dot(EV_))
        IV_ = jtu.np_like_set(IV_, 1, U_[1:2,:].dot(EV_))
        U1MU2 = IV_[0]-IV_[1]
        f_   = U1MU2**2-self.efpar[2]*IV_[1]**2
        if not isinstance( f_, float ):
            f_   = f_.item();
        if nargout>1:
            try:
                dim = len(IV_)
            except:
                dim = len(EV_)
            g_ = jnp.zeros(dim)
            g_ = jtu.np_like_set(g_, 0, self.efpar[0]*U1MU2)
            g_ = jtu.np_like_set(g_, 1, -self.efpar[0]*U1MU2-self.efpar[0]*self.efpar[2]*IV_[1])
            g_ =  U_.T.dot(g_)
            if nargout>2:
                H_ = jnp.zeros((2,2))
                H_ = jtu.np_like_set(H_, jnp.array([0,0]), self.efpar[0])
                H_ = jtu.np_like_set(H_, jnp.array([0,1]), -self.efpar[0])
                H_ = jtu.np_like_set(H_, jnp.array([1,0]), H_[0,1])
                H_ = jtu.np_like_set(H_, jnp.array([1,1]), self.efpar[0]*(1.0-self.efpar[2]))
                H_ = U_.T.dot(H_).dot(U_)
        if nargout == 1:
            return f_
        elif nargout == 2:
            return f_,g_
        elif nargout == 3:
            return f_,g_,H_

#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

